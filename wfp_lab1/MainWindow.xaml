<Window x:Class="wfp_lab1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:wfp_lab1"
        xmlns:vms="clr-namespace:wfp_lab1.ViewModels"
        xmlns:converters="clr-namespace:wfp_lab1.Converters"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <ControlTemplate x:Key="TextBoxBaseControlTemplate" TargetType="{x:Type TextBoxBase}">
            <Border Background="{TemplateBinding Background}" 
         x:Name="Bd" BorderBrush="Black"
         BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10" Padding="3"
         >
                <ScrollViewer x:Name="PART_ContentHost"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="Width" Value="Auto">
                    <Setter Property="MinWidth" Value="50"/>
                </Trigger>
                <Trigger Property="Height" Value="Auto">
                    <Setter Property="MinHeight" Value="15"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="Button" x:Key="BorderButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1.5"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="MinHeight" Value="35"/>
            <Setter Property="Margin" Value="10"/>
        </Style>
        <Style x:Key="BorderScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Column="0" Grid.ColumnSpan="2"
                                    Grid.Row="0" Grid.RowSpan="2"
                                    BorderThickness="0.5"
                                    BorderBrush="Gray">

                            </Border>
                            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanHorizontallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" CanVerticallyScroll="False" Grid.Column="0" Content="{TemplateBinding Content}" CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="ValidationError">
            <StackPanel Orientation="Vertical">
                <AdornedElementPlaceholder x:Name="placeholder"/>
                <ItemsControl ItemsSource="{Binding ElementName=placeholder, Path=(Validation.Errors)}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ErrorContent}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="BorderTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <AdornedElementPlaceholder x:Name="placeholder">
                            <Border CornerRadius="10" BorderBrush="Red" BorderThickness="1"/>
                        </AdornedElementPlaceholder>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" 
                                CornerRadius="10" MinHeight="22">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="ValidationErrorTemplate">
            <DockPanel>
                <AdornedElementPlaceholder x:Name="placeholder"/>
                <TextBlock Foreground="Red" Text="{Binding ElementName=placeholder, 
            Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
            Margin="2,4,0,0"/>
            </DockPanel>
        </ControlTemplate>
        <converters:StringIntConverter x:Key="StringIntConverter"/>
    </Window.Resources>
    <Window.DataContext>
        <vms:MainWindowViewModel/>
    </Window.DataContext>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>
        <Image Grid.Column="0" Source="./Assets/exhib.jpg" Stretch="UniformToFill"/>
        <DockPanel Grid.Column="1" LastChildFill="True">
            <TextBlock DockPanel.Dock="Top" HorizontalAlignment="Center" 
                       Text="Форма регистрации"
                       FontSize="22"
                       FontWeight="DemiBold"
                       />
            <Grid DockPanel.Dock="Bottom" VerticalAlignment="Bottom">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Button Style="{StaticResource BorderButton}" x:Name="ImportBtn" Grid.Column="0" Content="Импорт" Command="{Binding Import}"/>
                <Button Style="{StaticResource BorderButton}" x:Name="ExportBtn" Grid.Column="1" Content="Экспорт" Command="{Binding Export}"/>
                <Button Style="{StaticResource BorderButton}" x:Name="PrintBtn" Grid.Column="2" Content="Печать" Command="{Binding Print}"/>
            </Grid>
            <!--<TextBlock Grid.Column="0" Text="Площадь для экспозиции"/>
            <TextBox Grid.Column="1" Style="{StaticResource BorderTextBox}" Grid.Row="5" 
                     Text="{Binding Path=Participant.ExhibArea, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                     Converter={StaticResource StringIntConverter},
                     ValidatesOnNotifyDataErrors=True}" Validation.ErrorTemplate="{StaticResource errorTemplate}"/>-->
            <ScrollViewer Style="{StaticResource BorderScrollViewer}" Margin="35" Padding="15">
                <!--<StackPanel Orientation="Vertical" >
                    <TextBlock Text="Название организации"/>
                    <TextBox Style="{StaticResource BorderTextBox}" Grid.Row="0" Text="{Binding Path=Participant.OrgName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"/>
                    <TextBlock Text="Ответственное лицо"/>
                    <TextBox Style="{StaticResource BorderTextBox}" Grid.Row="3" Text="{Binding Path=Participant.PhomeNum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"/>
                    <TextBlock Text="Страна"/>
                    <TextBox Style="{StaticResource BorderTextBox}" Grid.Row="1" Text="{Binding Path=Participant.RespPerson, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"/>
                    <TextBlock Text="Номер телефона"/>
                    <TextBox Style="{StaticResource BorderTextBox}" Grid.Row="2" Text="{Binding Path=Participant.Country, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"/>
                    <TextBlock Text="Адрес эл. почты"/>
                    <TextBox Style="{StaticResource BorderTextBox}" Grid.Row="4" Text="{Binding Path=Participant.Email, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"/>
                    <TextBlock Text="Площадь для экспозиции"/>
                    <TextBox Style="{StaticResource BorderTextBox}" Grid.Row="5" Text="{Binding Path=Participant.ExhibArea, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" Validation.ErrorTemplate="{StaticResource errorTemplate}"/>
                </StackPanel>-->
                <StackPanel Orientation="Vertical">
                   
                    <Grid x:Name="RespPersonField">
                        <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock  Grid.Row="0" Text="Ответственное лицо"/>
                        <TextBox Grid.Row="1" Style="{StaticResource BorderTextBox}" Text="{Binding Path=Participant.RespPerson, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                            ValidatesOnNotifyDataErrors=True}" 
                            Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"/>
                    </Grid>
                    <Grid x:Name="CountryField">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock  Grid.Row="0" Text="Страна"/>
                        <TextBox Grid.Row="1" Style="{StaticResource BorderTextBox}" Text="{Binding Path=Participant.Country, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                            ValidatesOnNotifyDataErrors=True}" 
                            Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"/>
                    </Grid>
                    <Grid x:Name="ExhibAreaField">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="Площадь для экспозиции"/>
                        <TextBox Grid.Row="1" Style="{StaticResource BorderTextBox}"
                            Text="{Binding Path=Participant.ExhibArea, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                            Converter={StaticResource StringIntConverter},
                            ValidatesOnNotifyDataErrors=True}"/>
                    </Grid>
                    <Grid x:Name="OrgField" VerticalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock  Grid.Row="0" Text="Название организации"/>
                        <TextBox Grid.Row="1" Style="{StaticResource BorderTextBox}" Text="{Binding Path=Participant.OrgName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
         ValidatesOnNotifyDataErrors=True}"/>
                    </Grid>
                </StackPanel>
            </ScrollViewer>
        </DockPanel>
    </Grid>
</Window>
